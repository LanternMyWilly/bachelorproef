{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  constructor(service) {\n    this.service = service;\n  }\n  loadHighestTotaluser() {\n    this.service.loadHighestTotalUser().subscribe(resp => {\n      this.highestTotalUser = resp;\n    });\n  }\n  loadItemsCount() {\n    this.service.loadItemsCount().subscribe(resp => {\n      this.itemsCount = resp;\n    });\n  }\n  loadUsersCount() {\n    this.service.loadUsersCount().subscribe(resp => {\n      this.usersCount = resp;\n    });\n  }\n  loadRandomQuote() {\n    this.service.loadRandomQuote().subscribe(resp => {\n      this.randomQuote = resp;\n    });\n  }\n  ngOnInit() {\n    this.loadHighestTotaluser();\n    this.loadItemsCount();\n    this.loadUsersCount();\n    this.loadRandomQuote();\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YAAoBC,OAAgB;IAAhB,YAAO,GAAPA,OAAO;EAAY;EAEvCC,oBAAoB;IAClB,IAAI,CAACD,OAAO,CAACE,oBAAoB,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MAC1D,IAAI,CAACC,gBAAgB,GAAGD,IAAI;IAC9B,CAAC,CAAC;EACJ;EAEAE,cAAc;IACZ,IAAI,CAACN,OAAO,CAACM,cAAc,EAAE,CAACH,SAAS,CAAEC,IAAS,IAAI;MACpD,IAAI,CAACG,UAAU,GAAGH,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAI,cAAc;IACZ,IAAI,CAACR,OAAO,CAACQ,cAAc,EAAE,CAACL,SAAS,CAAEC,IAAS,IAAI;MACpD,IAAI,CAACK,UAAU,GAAGL,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAM,eAAe;IACb,IAAI,CAACV,OAAO,CAACU,eAAe,EAAE,CAACP,SAAS,CAAEC,IAAS,IAAI;MACrD,IAAI,CAACO,WAAW,GAAGP,IAAI;IACzB,CAAC,CAAC;EACJ;EAEAQ,QAAQ;IACN,IAAI,CAACX,oBAAoB,EAAE;IAC3B,IAAI,CAACK,cAAc,EAAE;IACrB,IAAI,CAACE,cAAc,EAAE;IACrB,IAAI,CAACE,eAAe,EAAE;EACxB;CACD;AAtCYZ,kBAAkB,eAL9BD,SAAS,CAAC;EACTgB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWjB,kBAAkB,CAsC9B;SAtCYA,kBAAkB","names":["Component","DashboardComponent","constructor","service","loadHighestTotaluser","loadHighestTotalUser","subscribe","resp","highestTotalUser","loadItemsCount","itemsCount","loadUsersCount","usersCount","loadRandomQuote","randomQuote","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/florianserneels/Documents/PutridGrove/Angular/putrid-grove-angular/src/app/components/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport User from 'src/app/models/user';\nimport { Service } from 'src/app/services/service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  highestTotalUser!: User;\n  itemsCount!: number;\n  usersCount!: number;\n  randomQuote!: string;\n\n  constructor(private service: Service) {}\n\n  loadHighestTotaluser() {\n    this.service.loadHighestTotalUser().subscribe((resp: any) => {\n      this.highestTotalUser = resp;\n    });\n  }\n\n  loadItemsCount() {\n    this.service.loadItemsCount().subscribe((resp: any) => {\n      this.itemsCount = resp;\n    });\n  }\n\n  loadUsersCount() {\n    this.service.loadUsersCount().subscribe((resp: any) => {\n      this.usersCount = resp;\n    });\n  }\n\n  loadRandomQuote() {\n    this.service.loadRandomQuote().subscribe((resp: any) => {\n      this.randomQuote = resp;\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadHighestTotaluser();\n    this.loadItemsCount();\n    this.loadUsersCount();\n    this.loadRandomQuote();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}